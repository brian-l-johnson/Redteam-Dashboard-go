definitions:
  models.Host:
    properties:
      hostname:
        type: string
      ip:
        type: string
      os:
        type: string
      ports:
        items:
          $ref: '#/definitions/models.Port'
        type: array
    type: object
  models.LoginReq:
    properties:
      password:
        type: string
      user:
        type: string
    type: object
  models.Port:
    properties:
      id:
        type: integer
      protocol:
        type: string
      service:
        type: string
      state:
        type: string
    type: object
  models.RegisterReq:
    properties:
      name:
        type: string
      password:
        type: string
    type: object
  models.Scan:
    properties:
      endTime:
        type: string
      hosts:
        items:
          $ref: '#/definitions/models.Host'
        type: array
      startTime:
        type: string
      status:
        type: string
    type: object
  models.UserReq:
    properties:
      active:
        type: boolean
      roles:
        items:
          type: string
        type: array
    type: object
info:
  contact: {}
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login a user
      parameters:
      - description: Login Data
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/models.LoginReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Login
      tags:
      - user
  /auth/logout:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: json
      summary: Logout
      tags:
      - user
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a user
      parameters:
      - description: Login Data
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/models.RegisterReq'
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Register User
      tags:
      - user
  /auth/status:
    get:
      consumes:
      - application/json
      description: Check login status
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Auth Status
      tags:
      - user
  /auth/user/{uid}:
    delete:
      consumes:
      - application/json
      description: delete a user
      parameters:
      - description: User ID
        in: path
        name: uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: delete user
      tags:
      - user
  /auth/users:
    get:
      consumes:
      - application/json
      description: List users on the sytem
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: json
      summary: List users
      tags:
      - user
  /auth/users/{uid}:
    put:
      consumes:
      - application/json
      description: update users attributes
      parameters:
      - description: User Data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserReq'
      - description: User ID
        in: path
        name: uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: update user
      tags:
      - user
  /health:
    get:
      consumes:
      - application/json
      description: Health check
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Health Check
      tags:
      - status
  /scan/nmap:
    post:
      consumes:
      - application/json
      description: upload new nmap scan
      parameters:
      - description: nmap scan data
        in: body
        name: scan
        required: true
        schema:
          $ref: '#/definitions/models.Scan'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: nmap scan
      tags:
      - scan
swagger: "2.0"
